{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gpish\\\\Documents\\\\GitHub\\\\Spectrum-World\\\\Website\\\\spectrum\\\\src\\\\spring\\\\Flower-Match\\\\Flower-Match.js\",\n  _s = $RefreshSig$();\n// Flower-Match minigame\nimport React, { useEffect, useState } from \"react\";\nimport { images } from './flowers';\nimport './Flower-Match.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flower_Match() {\n  _s();\n  const COVER_IMG = \"https://progitek.no/privat/bp/wp-content/uploads/2021/09/pexels-pixabay-235985-scaled.jpg\";\n  const [imagesArray, setImagesArray] = useState([]);\n  const [cardsChosen, setCardsChosen] = useState([]);\n  const [cardsChosenIds, setCardsChosenIds] = useState([]); //Maintaining sep array for ids because 2 pics may be the same but not 2 ids\n\n  //To not flip successfully matched pairs\n  const [openCards, setOpenCards] = useState([]);\n\n  //Creating the array of images\n  function createBoard() {\n    const imagesGenerated = images.concat(...images);\n    const shuffledImages = shuffleArray(imagesGenerated);\n    setImagesArray(shuffledImages);\n  }\n\n  //Fisher Yates shuffling algo\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  function flipImage(image, index) {\n    if (cardsChosen.length === 1 && cardsChosenIds[0] === index) return;\n    if (cardsChosen.length < 2) {\n      setCardsChosen(cardsChosen => cardsChosen.concat(image));\n      setCardsChosenIds(cardsChosenIds => cardsChosenIds.concat(index));\n      if (cardsChosen.length === 1) {\n        if (cardsChosen[0] === image) {\n          setOpenCards(openCards => openCards.concat([cardsChosen[0], image]));\n        }\n        setTimeout(() => {\n          setCardsChosenIds([]);\n          setCardsChosen([]);\n        }, 700);\n      }\n    }\n  }\n  function isCardChosen(image, index) {\n    return cardsChosenIds.includes(index) || openCards.includes(image);\n  }\n  useEffect(() => {\n    createBoard();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is flower page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: imagesArray.map((image, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 col-lg-2\",\n          onClick: () => flipImage(image, index),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isCardChosen(image, index) ? image : COVER_IMG,\n            alt: \"\",\n            className: \"imageCard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Flower_Match, \"+QMrPL7y8uKs3h2UukppASreicQ=\");\n_c = Flower_Match;\nvar _c;\n$RefreshReg$(_c, \"Flower_Match\");","map":{"version":3,"names":["React","useEffect","useState","images","jsxDEV","_jsxDEV","Flower_Match","_s","COVER_IMG","imagesArray","setImagesArray","cardsChosen","setCardsChosen","cardsChosenIds","setCardsChosenIds","openCards","setOpenCards","createBoard","imagesGenerated","concat","shuffledImages","shuffleArray","array","i","length","j","Math","floor","random","flipImage","image","index","setTimeout","isCardChosen","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/gpish/Documents/GitHub/Spectrum-World/Website/spectrum/src/spring/Flower-Match/Flower-Match.js"],"sourcesContent":["// Flower-Match minigame\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {images} from './flowers';\r\n\r\nimport './Flower-Match.css';\r\n\r\nexport default function Flower_Match(){\r\n    const COVER_IMG = \"https://progitek.no/privat/bp/wp-content/uploads/2021/09/pexels-pixabay-235985-scaled.jpg\";\r\n    const [imagesArray, setImagesArray] = useState([]);\r\n    const [cardsChosen, setCardsChosen] = useState([]);\r\n    const [cardsChosenIds, setCardsChosenIds] = useState([]); //Maintaining sep array for ids because 2 pics may be the same but not 2 ids\r\n    \r\n    //To not flip successfully matched pairs\r\n    const [openCards, setOpenCards] = useState([]);\r\n    \r\n\r\n    //Creating the array of images\r\n    function createBoard(){\r\n        const imagesGenerated = images.concat(...images);\r\n        const shuffledImages = shuffleArray(imagesGenerated);\r\n        setImagesArray(shuffledImages);\r\n\r\n    }\r\n\r\n    //Fisher Yates shuffling algo\r\n    function shuffleArray(array){\r\n        for(let i = array.length - 1; i > 0; i--){\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n    \r\n    function flipImage(image, index){\r\n        if (cardsChosen.length === 1 && cardsChosenIds[0] === index) return;\r\n\r\n        if (cardsChosen.length < 2){\r\n            setCardsChosen(cardsChosen => cardsChosen.concat(image));\r\n            setCardsChosenIds(cardsChosenIds => cardsChosenIds.concat(index));\r\n\r\n            if (cardsChosen.length === 1){\r\n                if (cardsChosen[0] === image){\r\n                    setOpenCards(openCards => openCards.concat([cardsChosen[0], image]))\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    setCardsChosenIds([])\r\n                    setCardsChosen([])\r\n                }, 700);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    function isCardChosen(image, index){\r\n        return cardsChosenIds.includes(index) || openCards.includes(image);\r\n    }\r\n\r\n    useEffect(() => {\r\n        createBoard()\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <h1>This is flower page</h1>\r\n            <div className=\"row\">\r\n                {imagesArray.map((image, index) => {\r\n                    return(\r\n                        <div className = \"col-4 col-lg-2\" key = {index} onClick={() => flipImage(image, index)}>\r\n                        <img src = {isCardChosen(image, index) ? image : COVER_IMG} alt = \"\" \r\n                        className=\"imageCard\"/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
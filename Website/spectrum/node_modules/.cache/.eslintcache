[{"C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\index.js":"1","C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\App.js":"2","C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\Home.js":"3","C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\spring\\Spring.js":"4","C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\spring\\Flower-Match\\Flower-Match.js":"5","C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\spring\\Flower-Match\\flowers.js":"6"},{"size":497,"mtime":1696240031976,"results":"7","hashOfConfig":"8"},{"size":777,"mtime":1696958810892,"results":"9","hashOfConfig":"8"},{"size":351,"mtime":1696661978535,"results":"10","hashOfConfig":"8"},{"size":1396,"mtime":1697776257484,"results":"11","hashOfConfig":"8"},{"size":2621,"mtime":1697273606488,"results":"12","hashOfConfig":"8"},{"size":734,"mtime":1697270236900,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},"c37hpx",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\index.js",["36"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App/>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n",["37"],"C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\App.js",["38"],[],"import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\n// import LoginPage1 from './login.jsx';\r\n// import LoginPage2 from './signup.jsx';\r\nimport Home from './Home.js';\r\nimport Spring from './spring/Spring.js';\r\nimport Flower_Match from './spring/Flower-Match/Flower-Match.js';\r\n\r\nexport default function page(){\r\n    return (\r\n        // <div>\r\n        //     {/* <LoginPage1/> */}\r\n        //     {/* <LoginPage2/> */}\r\n        // </div>\r\n        <Router>\r\n            <Routes>\r\n                <Route path = \"/\" element = {<Home/>}/>\r\n                <Route path = \"/spring\" element = {<Spring/>}/>\r\n                <Route path = \"/flower\" element = {<Flower_Match/>}/>\r\n            </Routes>\r\n        </Router>\r\n    );\r\n}","C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\Home.js",[],[],"C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\spring\\Spring.js",[],[],"C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\spring\\Flower-Match\\Flower-Match.js",["39"],[],"// Flower-Match minigame\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {images} from './flowers';\r\n\r\nimport './Flower-Match.css';\r\n\r\nexport default function Flower_Match(){\r\n    const COVER_IMG = \"https://progitek.no/privat/bp/wp-content/uploads/2021/09/pexels-pixabay-235985-scaled.jpg\";\r\n    const [imagesArray, setImagesArray] = useState([]);\r\n    const [cardsChosen, setCardsChosen] = useState([]);\r\n    const [cardsChosenIds, setCardsChosenIds] = useState([]); //Maintaining sep array for ids because 2 pics may be the same but not 2 ids\r\n    \r\n    //To not flip successfully matched pairs\r\n    const [openCards, setOpenCards] = useState([]);\r\n    \r\n\r\n    //Creating the array of images\r\n    function createBoard(){\r\n        const imagesGenerated = images.concat(...images);\r\n        const shuffledImages = shuffleArray(imagesGenerated);\r\n        setImagesArray(shuffledImages);\r\n\r\n    }\r\n\r\n    //Fisher Yates shuffling algo\r\n    function shuffleArray(array){\r\n        for(let i = array.length - 1; i > 0; i--){\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n    \r\n    function flipImage(image, index){\r\n        if (cardsChosen.length === 1 && cardsChosenIds[0] === index) return;\r\n\r\n        if (cardsChosen.length < 2){\r\n            setCardsChosen(cardsChosen => cardsChosen.concat(image));\r\n            setCardsChosenIds(cardsChosenIds => cardsChosenIds.concat(index));\r\n\r\n            if (cardsChosen.length === 1){\r\n                if (cardsChosen[0] === image){\r\n                    setOpenCards(openCards => openCards.concat([cardsChosen[0], image]))\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    setCardsChosenIds([])\r\n                    setCardsChosen([])\r\n                }, 1200);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    function isCardChosen(image, index){\r\n        return cardsChosenIds.includes(index) || openCards.includes(image);\r\n    }\r\n\r\n    useEffect(() => {\r\n        createBoard()\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"row\">\r\n                {imagesArray.map((image, index) => {\r\n                    return(\r\n                        <div className = \"col-4 col-lg-2 flipped\" key = {index} onClick={() => flipImage(image, index)}>\r\n                        <img src = {isCardChosen(image, index) ? image : COVER_IMG} alt = \"\" \r\n                        className= \"imageCard\"/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\skhim\\Documents\\GitHub\\Spectrum-World\\Website\\spectrum\\src\\spring\\Flower-Match\\flowers.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":5,"column":26,"nodeType":"42","messageId":"43","endLine":5,"endColumn":32},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":20,"column":52,"nodeType":"48","messageId":"49","endLine":20,"endColumn":67},{"ruleId":"50","severity":1,"message":"51","line":62,"column":8,"nodeType":"52","endLine":62,"endColumn":10,"suggestions":"53"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-new-object",["54"],"react/jsx-pascal-case","Imported JSX component Flower_Match must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createBoard'. Either include it or remove the dependency array.","ArrayExpression",["55"],"no-object-constructor",{"desc":"56","fix":"57"},"Update the dependencies array to be: [createBoard]",{"range":"58","text":"59"},[2081,2083],"[createBoard]"]